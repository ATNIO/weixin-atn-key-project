<config>
{
    "navigationBarTitleText": "子密钥生成",
    "navigationBarBackgroundColor": "#3A5FCD",
    "navigationBarTextStyle": "white"
}
</config>

<style>
.home-section-title {
    background-color: #F9F9F9;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    height: 150rpx;
    border-radius: 10rpx;
}

.home-section-title-make {
    color: #217834;
    padding-left: 30rpx;
}
.recognize-content {
  /*padding: 10px;*/
}
.recognize-content-hidden {
  padding: 10px;
  color: #e5e5e5;
}

.home-section-title-recognize {
    color: #E1C26F;
    padding-left: 40rpx;
}

.home-next-btn {
    margin-right: 30rpx;
    height: 45rpx;
    width: 45rpx;
}

.container-box{
    background-color: #e5e5e5;
    height: 100vh;
    flex-direction: column;
    align-items: center;
    padding-top: 60rpx;

}

.home-section {
    background-color: white;
    margin: 30rpx;
    border-radius: 10rpx;

}

.recog-text {
    font-size-adjust: true
}
.home-clear {
  font-size: x-small;
  color: #ff7069;
  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
  margin-right: 10px;
  height: 40px;
  text-align: center;
  display: flex;
  justify-content: flex-end;
}
</style>

<template>
<!--pages/home/home.wxml-->
<view class="container-box">
    <!--生成器-->
    <view class="home-section">

        <view class="home-section-title" bindtap="makeQrcode">
            <text class="home-section-title-make">生成器</text>
            <image class="home-next-btn" src="../../images/next.png"></image>
        </view>
        <view hidden="{{isShowMsg}}">
            <textarea maxlength="-1" bindinput="bindInput" value="{{qrMsg}}" class="recognize-content" placeholder="请输入二维码的文本内容"/>
            <view class="home-clear"><text  hidden="{{showClear}}" bindtap="bindClearAll">CLEAR</text>
            </view>
        </view>

    </view>
    <form report-submit bindsubmit="submit">
</form>
</view>

</template>

<script>

// pages/keycreate/keycreate.js
import { Page } from '@tinajs/tina'
import { create, combine } from '../../utils/sssa.js'

Page.define({

    /**
     * 页面的初始数据
     */
    data: {
        qrMsg: '',
        isShowMsg: false,
        isShowResult: false,
        showClear: true,
        list:[],
    },

    /**
     * 生命周期函数--监听页面加载
     */
    onLoad: function (options) {
        // 页面初始化 options为页面跳转所带来的参数
        this.setData({
            isShowMsg: false,
            isShowResult: true,
        })
    },

    /**
     * 生命周期函数--监听页面初次渲染完成
     */
    onReady: function () {
        // 页面渲染完成
    },

    /**
     * 生命周期函数--监听页面显示
     */
    onShow: function () {
        // 页面显示
    },

    /**
     * 生命周期函数--监听页面隐藏
     */
    onHide: function () {
        // 页面隐藏
    },

    /**
     * 生命周期函数--监听页面卸载
     */
    onUnload: function () {
        // 页面关闭
    },

    // 生成二维码
   methods:{
   makeQrcode: function (e) {


        this.setData({
            isShowMsg: false,
            isShowResult: true,
            index:0
        })


        var qrMsgStr = this.data.qrMsg; 
        console.log(qrMsgStr+ "家");
        var minimum=2 ,shares=3,raw = qrMsgStr.toString('hex');
        var secretStrList = create(minimum,shares,raw);

        console.log('keycreate   secretStrList:'+ secretStrList);

        if (null==this.data.qrMsg||this.data.qrMsg == "") {
            wx.showToast({
                title: '二维码内容不能为空',
                icon: 'loading',
                duration: 500
            })
            return
        }


        var jsonSecrets=JSON.stringify(secretStrList);
        //将子密钥数组本地存储
        wx.setStorage({
            key:"secretkeys",
            data: jsonSecrets,
            success: function(){
                console.log('setStorage success');
            }
        })
    
        wx.navigateTo({
            url: '../qrcodeshow/qrcode_1?index=0',
            // url: '../qrcodeshow/qrcode_1',
            success: function (res) {
                // success
                console.log('wx.navigateTo ' + secretStrList);
            },
            fail: function () {
                // fail
            },
            complete: function () {
                // complete
            }
        })
    },
    bindInput: function (e) {
        console.log(e.detail.value)
        this.setData({
            qrMsg: e.detail.value
        })
        if (this.data['qrMsg'].length > 1) {
            this.setData({
                showClear: false
            })
        } else {
            this.setData({
                showClear: true
            })
        }
    },

    // 清空
    bindClearAll: function (e) {
      this.setData({
        qrMsg: '',
        isShowMsg: false,
        isShowResult: false,
        showClear: true,
        index:0
      })
    },
}
})
</script>
